# This file is part of pydidas.
#
# Copyright 2024, Helmholtz-Zentrum Hereon
# SPDX-License-Identifier: CC-BY-4.0
#
# This workflow will create the github pages documentation for pydidas
# which is accessible at https://hereon-gems.github.io/pydidas/

name: Release and Documentation

on:
  push:
    branches: [ "release_branch_for_documentation" ]
    tags:
      - '*'

jobs:
  create_release_and_docs:

    strategy:
        matrix:
            tag: [ "24.06.05"]#, "v24.03.25" ]
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.1
        with:
            ref: ${{ matrix.tag }}
            fetch-tags: true
            fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"
#      - name: Cache virtualenv
#        uses: actions/cache@v3
#        with:
#          key: venv-${{ runner.os }}-${{ steps.setup_python.outputs.python-version}}-${{ hashFiles('requirements.txt') }}
#          path: .venv
      - name: Install dependencies
        run: |          
          # python -m venv .venv
          # source .venv/bin/activate
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          # echo "$VIRTUAL_ENV/bin" >> $GITHUB_PATH
          # echo "VIRTUAL_ENV=$VIRTUAL_ENV" >> $GITHUB_ENV
      - name: Extract version
        id: extract_version
        run: |
          export QT_QPA_PLATFORM=offscreen
          {
            echo $(python -c "from pydidas import VERSION; print(f'VERSION={VERSION}')" --no-sphinx)
          } >> $GITHUB_OUTPUT
      - name: Display version
        run: |
          echo "Extracted version from pydidas: ${{ steps.extract_version.outputs.VERSION }}" >> $GITHUB_STEP_SUMMARY
#      - name: Build Sphinx documentation
#        run: |
#          export QT_QPA_PLATFORM=offscreen
#          sphinx-build pydidas/docs/src _site

#    - name: Create Release
#      id: create_release
#      uses: actions/create-release@v1
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        tag_name: ${{ github.ref }}
#        release_name: Release ${{ github.ref }}
#        draft: false
#        prerelease: false
#
#      - name: Deploy to GitHub Pages version subdirectory
#        uses: peaceiris/actions-gh-pages@v3
#        with:
#          github_token: ${{ secrets.GITHUB_TOKEN }}
#          publish_dir: ./_site
#          user_name: 'github-actions[bot]'
#          user_email: 'github-actions[bot]@users.noreply.github.com'
#          destination_dir: ${{ steps.extract_version.outputs.VERSION }}
#
#      - name: Deploy to GitHub Pages main
#        uses: peaceiris/actions-gh-pages@v3
#        with:
#          github_token: ${{ secrets.GITHUB_TOKEN }}
#          publish_dir: ./_site
#          user_name: 'github-actions[bot]'
#          user_email: 'github-actions[bot]@users.noreply.github.com'
#          keep_files: true